Wht happens when you initialize a repository? Why do you need to do it?

We create a new repository

How is the staging area different from the working directory and the repository?
What value do you think it offers?
We can use git init and git status
The repository can save all the history of the commits

How can you use the staging area to make sure you have one commit per logical
change?

Using git diff --staged- > staging area and commit1
First add files that are related to the first logical change you want to commit.
After we staged all the files make a commit.
Next you stage other files that are related to the second logical change you want to commit, and so on. 

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
For example if you want to create a version into another language different than the original one.(Italian brach, English Branch).
A branch is pointing into the commit's data history. This way is easier to do a hotfix and test and if everything works fine to merge with the master.

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
